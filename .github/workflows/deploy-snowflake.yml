name: deploy-snowflake

# Controls when the action will run. 
on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'migrations/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # First "set_env" job gets and parse the branch this is run from
  # This is used to configure the backend.config and tfvars file in the env-config directory
  set_env:
    runs-on: ubuntu-latest
    steps:
      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          echo "::set-output name=env_name::${GITHUB_REF#refs/heads/}"
         
      #- name: Use variable setup in previous step
      #  run: echo "I'm using variable ${{ steps.branch_check.outputs.env_name }}"
  
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }} # job output ... consumed by next job

  deploy-snowflake-changes-job:
    needs: [set_env] #orchestrates set_env job to run before terraform_deployment
    runs-on: ubuntu-latest
    environment: ${{ needs.set_env.outputs.env_name }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          CONFIG_FOLDER: ${{github.workspace}}/config/${{needs.set_env.outputs.env_name}}/
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange
          
          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/migrations --config-folder $CONFIG_FOLDER -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
